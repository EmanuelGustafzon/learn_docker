name: dockercompose2557310820475892810
services:
  db:
    container_name: products_db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Password123!
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      my-network: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: products-volume
        target: /var/opt/mssql
        volume: {}
  webapi:
    build:
      context: C:\Users\Emanuel\source\repos\learn_docker
      dockerfile: webApi/Dockerfile
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: webapi
    networks:
      my-network: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    restart: on-failure
    volumes:
      - type: bind
        source: C:\Users\Emanuel\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Emanuel\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  my-network:
    name: dockercompose2557310820475892810_my-network
volumes:
  products-volume:
    name: dockercompose2557310820475892810_products-volume